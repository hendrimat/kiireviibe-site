/* Copyright 2023 The MediaPipe Authors.
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
        http://www.apache.org/licenses/LICENSE-2.0
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License. */

   @import url('variables.css'); /* Include the variables file */

   body {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
    margin: 0;
    font-family: 'Roboto Mono', monospace;
    color: var(--primary-text, #15141A);
    background-color: var(--light-gray, #F0F0F4);
  }
  
  #demos {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }
  
  #typingSection {
    margin-top: 20px;
  }
  
  #textToType {
    font-size: 32px;
    color: var(--secondary-text, gray);
  }
  
  #webcam {
    width: 100%; /* Make the video fill the container width */
  }

  #liveView {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  
  #liveView video {
    display: block;
    transform: rotateY(180deg);
    -webkit-transform: rotateY(180deg);
    -moz-transform: rotateY(180deg);
    height: 360px;
  }
  
  #output_canvas {
    position: relative;
    transform: rotateY(180deg);
    -webkit-transform: rotateY(180deg);
    -moz-transform: rotateY(180deg);
  }
  
  
  .output {
    display: none;
    width: 100%;
    /*font-size: calc(8px + 1.2vw);*/
  }

  #gesture_output {
    display: block;
  }
  
  #typingSection {
    margin-top: 20px;
  }
  
  #textToType span {
    /* Styling for the current character being typed */
    color: var(--primary-text, black);
  }
  
  #textToType .current {
    position: relative;
    color: var(--secondary-text, grey);
  }
  
  #textToType .current::after {
    /* Blinking underline */
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 3px;
    background-color: var(--primary-text, black);
    animation: blinkAnimation 3s ease-in-out infinite; 
  }
  
  @keyframes blinkAnimation {
    0%, 50%, 100% {
      opacity: 1;
    }
    25%, 75% {
      opacity: 0;
    }
  }
  
  #textToType .incorrect {
    color: var(--red, red);
  }
  
  #textToType .untyped {
    color: var(--secondary-text, gray);
  }
  